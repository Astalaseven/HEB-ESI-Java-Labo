<?xml version="1.0" encoding="UTF-8"?>
<lesson xmlns="http://www.elml.ch" 
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://www.elml.ch ../../../_config/validate.xsd"
		label="TD6" title="TD6 - Les boucles">

	<entry>
		<paragraph>  
			Ce TD a pour objectif de vous familiariser avec la notion de package 
			et les instructions de boucles (for, while) 
			et de compléter vos connaissances de l'environnement de travail linux &amp; vi.
		</paragraph> 
		<paragraph title="Rappels :"/>  
		<list listStyle="unordered">
			<item>Ce TD est accompagné d'exercices à faire <formatted style="bold">avant</formatted> de venir au laboratoire.</item>  
			<item>Prenez bien note des réponses aux exercices.</item>  
		</list>
	</entry>
	
	<unit label="package" title="La notion de package">
		
		<entry>
		Jusqu'à présent, nous n'avons pas placé nos programmes dans un package comme c'est normalement recommandé. 
		Voyons comment ça marche.
		</entry>

		<learningObject title="Introduction">

			<clarify>
				<paragraph title="Pratiquement pour les tds" icon="icon_reading"/>
				<paragraph>
					Pour <formatted style="bold">votre</formatted> code, 
					nous vous recommandons de rassembler vos classes par package portant le nom du td  <newLine/>
					(exemple : « <formatted style="java">g32010.td6</formatted> » 
					ou « <formatted style="java">g32010.tds.td6</formatted> »). 
				</paragraph>
				<paragraph>
					L’appartenance d’une classe à un package déterminé est nécessaire à la compilation. 
					Dès lors vous devrez rajouter comme <formatted style="bold">première instruction en tête de fichier</formatted> 
					(c-à-d avant même l'instruction <formatted style="java">public class NomClasse</formatted>) : <newLine/>
					<formatted style="java">package g32010.td6;</formatted><newLine/>
					(ou <formatted style="java">package g32010.tds.td6;</formatted>)
				</paragraph>
				
				<paragraph title="Nom complet d'une classe" icon="icon_reading"/>
				<paragraph>
					Le nom qualifié d'une classe est obtenu en accolant
					le nom de la classe au nom du package,
					on obtient ainsi un nom unique pour cette classe.
					On parlera du «<formatted style="bold">nom complet</formatted>» 
					ou du «<formatted style="bold">nom qualifié</formatted>» de la classe.
				</paragraph>
				<paragraph>
					Par exemple, le nom complet de la classe <formatted style="code">Couleur</formatted> 
					dont le package est <formatted style="java">java.tds.td6.classes</formatted>
					est <formatted style="java">java.tds.td6.classes.Couleur</formatted>. 
				</paragraph>

			</clarify>

			<act>
				<selfCheck shuffle="no">
					<fillInBlanks>
						<question>
							Donnez le nom complet de la classe <formatted style="code">SurfaceTriangle</formatted>
							dont le package est <formatted style="code">g32010.td6</formatted>
						</question>
						<gapText>
							<gap answers="">g32010.td6.SurfaceTriangle</gap>
						</gapText>
						<solution/>
					</fillInBlanks>
				</selfCheck>
				
				<paragraph title="Package et stockage de fichier..." icon="icon_reading"/>
				<paragraph>
					La notion de package est liée à celle de répertoire.
					Sur le serveur linux1, nous ferons correspondre à chaque nom de package
					une arborescence de répertoires de la manière suivante :
					<formatted style="java">java.tds.td6.classes</formatted> sera associé 
					à <formatted style="code">java/tds/td6/classes</formatted> 
					(cette arborescence se trouve actuellement sous <formatted style="code">/eCours</formatted> sur linux1). 
					Nous stockerons tous les fichiers contenant les définitions des classes de ce package
					dans le répertoire associé.
					Donc, si <formatted style="java">Couleur</formatted> a pour package 
					<formatted style="java">java.tds.td6.classes</formatted>,
					le fichier <formatted style="code">Couleur.class</formatted>
					devra se trouver dans le répertoire associé 
					<formatted style="code">java/tds/td6/classes</formatted>
				</paragraph>

				<selfCheck shuffle="no">
					<fillInBlanks>
						<question>
							Donnez la suite de répertoires dans lesquels <formatted style="bold">doit</formatted>
							se trouver la classe <formatted style="java">SurfaceTriangle</formatted>
							dont le package est <formatted style="java">g32010.tds.td6</formatted>
						</question>
						<gapText>
							<gap answers="">g32010/tds/td6</gap>
						</gapText>
						<solution/>
					</fillInBlanks>
				</selfCheck>

			</act>
	
		</learningObject>

		<learningObject title="Package et CLASSPATH">
		
			<clarify>
				<paragraph>
					Comme vous l'avez vu :
				</paragraph>
				<list listStyle="unordered">
					<item>
						Un package est un regroupement de classes.
					</item>
					<item>
						Pour créer un tel package,
						il suffit de commencer les fichiers sources contenant les classes à regrouper
						par l'instruction <formatted style="java">package</formatted> suivi du nom 
						que l'on désire donner au package.
					</item>
					<item>
						Les fichiers classes doivent se trouver dans l'arborescence de répertoires donnée par le package.
					</item>
				</list>
	
				<paragraph title="CLASSPATH" icon="icon_reading"/>
				<paragraph>
					Mais comment le compilateur peut-il trouver le package ?
					Comment connait-il son emplacement ?
					Comment sait-il où se trouve le répertoire
					<formatted style="code">java</formatted> ou le répertoire <formatted style="code">g32010</formatted> ? 
				</paragraph>
				<paragraph>
					Pour cela Java utilise une variable d'environnement appelée 
					<formatted style="code">CLASSPATH</formatted> qui donne la liste des chemins d'accès aux classes
					(aux <formatted style="code">.class</formatted>).
				</paragraph>
				<paragraph>
					Ceci signifie que la classe <formatted style="java">Couleur</formatted>
					dont le package est <formatted style="java">java.tds.td6.classes</formatted>
					se trouve (suivant le package) dans la hiérachie de répertoires
					<formatted style="code">tjava/ds/td6/classes</formatted>
					et le répertoire <formatted style="code">java</formatted>
					(en tête de cette hiérarchie) 
					se trouve lui-même dans une hiérarchie de répertoire connue du 
					<formatted style="code">CLASSPATH</formatted>,
					en l'occurence <formatted style="code">/eCours/</formatted>. 
				</paragraph>
				<paragraph>
					Donc, nous avons : 
					<formatted style="code">/eCours/java/tds/td6/classes/Couleur.class</formatted>.
				</paragraph>
	 
			</clarify>
			
			<act>
				<selfCheck title="Exercice" shuffle="yes">
					<fillInBlanks>
						<question>
							Sachant que la classe <formatted style="java">SurfaceTriangle</formatted> se trouve dans 
							<formatted style="code">/home/g32010/tds/td6</formatted> 
							et qu'on retrouve <formatted style="code">/home</formatted> dans la variable CLASSPATH, 
							donnez l'instruction <formatted style="java">package</formatted> correspondant à la situation.
						</question>
						<gapText>
							<paragraph cssClass="javawithblanks">
    package <gap answers="">g32010.tds.td6</gap>;
							</paragraph>
						</gapText>
						<solution/>
					</fillInBlanks>
				</selfCheck>

				<paragraph title="FAQ" icon="icon_faq"/>
				<paragraph>
					<formatted style="bold">Et si mon prof ne me dit pas ce que contient le CLASSPATH, comment voir son contenu?</formatted>
				</paragraph>
				<paragraph>
					Sous linux, grâce à la commande <formatted style="input"> echo $CLASSPATH</formatted>
				</paragraph>
				<paragraph>
					<formatted style="bold">Puis-je changer son contenu?</formatted>
				</paragraph>
				<paragraph>
					Oui, si vous voulez par exemple ajouter la hiérarchie de répertoires 
					<formatted style="code">/home/g32010</formatted>, 
					il vous suffit d'écrire : <formatted style="code">CLASSPATH=$CLASSPATH:/home/g32010</formatted>
					(Remarquez qu'il n'y a pas d'espace...)
				</paragraph>
				<paragraph>
					Évidemment <formatted style="bold">chez vous</formatted> vous aurez créé une arborescence
					<formatted style="code">gxxxxx/td6</formatted> en desssous de votre répertoire 
					<formatted style="code">home</formatted> :
					<formatted style="code">/home/moi/gxxxxx/td6</formatted>. 
					Il vous suffira donc d'écrire <formatted style="code"></formatted> :
				</paragraph>
				<paragraph cssClass="output">
    CLASSPATH=$CLASSPATH:/home/moi
    export CLASSPATH  # Nécessaire uniquement si CLASSPATH n'était pas encore défini
				</paragraph>
				<paragraph>
					<formatted style="bold">Tiens, je viens de changer mon CLASSPATH, 
						je me suis déconnecté et la valeur que j'avais ajouté au CLASSPATH a disparu!
					</formatted>
				</paragraph>
				<paragraph>
					Non non vous ne rêvez pas... la modification n'a pas été sauvegardée... 
					Je vous entends d'ici 
					"<formatted style="italic">Mais je vais devoir le refaire à chaque fois alors :S</formatted>".
					Rassurez-vous, en ajoutant les deux instructions ci-dessus à votre 
					fichier <formatted style="code">.bashrc</formatted>
					la modification sera sauvegardée d'une  connexion à l'autre :).
				</paragraph>
				<paragraph>
 					<formatted style="bold">Mais je n'ai pas encore installé linux chez moi, je ne peux donc pas utiliser de package ?</formatted>
				</paragraph>
				<paragraph>
					Sous Windows aussi il existe des variables d'environnement,
					il vous suffit d'ajouter une variable classpath ou de modifier la valeur de celle-ci. 
					Toutefois, il est grand temps de penser à installer un linux ! 
				</paragraph>

				<selfCheck title="Exercice" shuffle="yes">
					<fillInBlanks>
						<question>
							Supposons que la classe <formatted style="java">Exercice1</formatted>
							a pour package <formatted style="java">esi.lg1.exemples</formatted>
							et qu'elle a comme chemin 
							<formatted style="code">/eCours/java/be/heb/esi/lg1/exemples/Exercice1.class</formatted>, 
							donnez la hiérarchie de répertoires à ajouter au <formatted style="code">CLASSPATH</formatted>.
						</question>
						<gapText>
							CLASSPATH=$CLASSPATH:<gap answers="">/eCours/java/be/heb</gap>
						</gapText>
						<solution/>
					</fillInBlanks>
				</selfCheck>

				<paragraph title="Astuce" icon="act">
					Comme vous l'avez vu, le <formatted style="code">CLASSPATH</formatted>
					a besoin d'une arborescence de répertoires.
					Ceux-ci n'existent peut-être pas encore et il vous faudra alors les créer.
					Plutôt que de les créer un à un, 
					consultez l'aide de l'option <formatted style="code">-p</formatted> de <formatted style="code">mkdir</formatted> qui pourra vous servir !
				</paragraph>

				<paragraph>
				  Remarquez que seuls les fichiers <formatted style="code">.class</formatted> sont concernés par le <formatted style="code">CLASSPATH</formatted>. 
				  Le compilateur <formatted style="code">javac</formatted> peut mettre les fichiers .<formatted style="code">class</formatted> 
				  dans une arborescence adéquate en fonction du <formatted style="code">package</formatted> définit dans le fichier source, 
				  arborescence qu'il crée si nécessaire, en utilisant l'option <formatted style="code">-d <formatted style="italic">chemin</formatted></formatted> 
				  où <formatted style="italic">chemin</formatted> est un des chemins repris dans la variable <formatted style="code">CLASSPATH</formatted>. 
				  <newLine/>
				  On l'utilise en écrivant par exemple
				</paragraph>
				<paragraph cssClass="code">
    javac … -d /home          # à l'école 
    javac … -d /home/moi      # à la maison
				</paragraph>
				
			</act>

		</learningObject>
		
		<learningObject title="Mise en pratique">

			<clarify>
				<paragraph title="Résumé" icon="icon_reading"/>
				
				<table 	title="Quand vous ne travailliez pas encore avec la notion de package,"
						wdith="470" units="pixels">
					<tablerow>
						<tableheading width="10" units="pixels"></tableheading>
						<tableheading width="200" units="pixels">Voici comment vous procédiez</tableheading>
						<tableheading width="250" units="pixels">Exemple</tableheading>
					</tablerow>
					<tablerow>
						<tabledata>
							1
						</tabledata>
						<tabledata>
							<paragraph>
								En éditant votre fichier.
							</paragraph>
							<paragraph><newLine/></paragraph>
							<paragraph>
								Attention au nom qui doit correspondre au nom de votre classe
								et à l’extension qui est .java.
							</paragraph>
						</tabledata>
						<tabledata>
							<paragraph>
								<formatted style="code">vi Test.java</formatted>
							</paragraph>
							<paragraph><newLine/></paragraph>
							<paragraph>
								Vous obteniez un fichier <formatted style="code">Test.java</formatted>
								dans votre répertoire.
							</paragraph>
						</tabledata>
					</tablerow>
					<tablerow>
						<tabledata>
							2
						</tabledata>
						<tabledata>
							<paragraph>
								En le compilant avec la commande <formatted style="code">javac</formatted>
							</paragraph>
						</tabledata>
						<tabledata>
							<paragraph>
								<formatted style="code">javac Test.java</formatted>
							</paragraph>
							<paragraph><newLine/></paragraph>
							<paragraph>
								Vous obteniez un fichier <formatted style="code">Test.class</formatted>
								dans votre répertoire courant.
							</paragraph>
						</tabledata>
					</tablerow>
					<tablerow>
						<tabledata>
							3
						</tabledata>
						<tabledata>
							<paragraph>
								En exécutant la classe à partir du répertoire courant avec la commande
								<formatted style="code">java</formatted>
							</paragraph>
						</tabledata>
						<tabledata>
							<paragraph>
								<formatted style="code">java Test</formatted><newLine/>
							</paragraph>
						</tabledata>
					</tablerow>
				</table>
								
				<table 	title="Maintenant que vous travaillez avec la notion de package,"
						wdith="470" units="pixels">
					<tablerow>
						<tableheading width="10" units="pixels"></tableheading>
						<tableheading width="200" units="pixels">Voici comment vous procéderez</tableheading>
						<tableheading width="250" units="pixels">Exemple</tableheading>
					</tablerow>
					<tablerow>
						<tabledata>
							1
						</tabledata>
						<tabledata>
							<paragraph>
								Il faut vérifier que le fichier se trouve dans une arborescence
								qui correspond au nom du package.
							</paragraph>
						</tabledata>
						<tabledata>
							<paragraph>
								Supposons que :
							</paragraph>
							<list listStyle="unordered"> 
								<item>Le CLASSPATH contient <formatted style="code">/home</formatted>,</item>
								<item>le package est <formatted style="code">g32010.td6</formatted>,</item>
								<item>la classe s'appelle <formatted style="code">Test</formatted>,</item>
								<item>le chemin absolu du fichier est <formatted style="code">/home/g32010/td6/Test.java</formatted>.</item>
							</list>
							<paragraph>
								Dans le répertoire <formatted style="code">/home/g32010/td6/</formatted> : 
								<formatted style="code">vi Test.java</formatted>
							</paragraph>
							<paragraph>
								Vous obtenez un fichier <formatted style="code">Test.java</formatted>
								dans votre répertoire <formatted style="code">/home/g32010/td6/</formatted>.
							</paragraph>
						</tabledata>
					</tablerow>
					<tablerow>
						<tabledata>
							2
						</tabledata>
						<tabledata>
							<paragraph>
								En le compilant avec la commande <formatted style="code">javac</formatted>
							</paragraph>
						</tabledata>
						<tabledata>
							<paragraph>
								<formatted style="code">javac Test.java</formatted>
							</paragraph>
							<paragraph>
								Vous obtenez un fichier <formatted style="code">Test.class</formatted> dans votre répertoire 
								<formatted style="code">/home/g32010/td6/</formatted>.							
							</paragraph>
						</tabledata>
					</tablerow>
					<tablerow>
						<tabledata>
							3
						</tabledata>
						<tabledata>
							<paragraph>
								En exécutant la classe en donnant son <formatted style="bold">nom complet</formatted>
								avec la commande <formatted style="code">java</formatted>
							</paragraph>
						</tabledata>
						<tabledata>
							<paragraph>
								<formatted style="code">java g32010.td6.Test</formatted>
							</paragraph>
						</tabledata>
					</tablerow>
				</table>

        <table 	title="Ou encore, en scindant sources et classes"
						wdith="470" units="pixels">
					<tablerow>
						<tableheading width="10" units="pixels"></tableheading>
						<tableheading width="200" units="pixels">Voici comment vous procéderez</tableheading>
						<tableheading width="250" units="pixels">Exemple</tableheading>
					</tablerow>
					<tablerow>
						<tabledata>
							1
						</tabledata>
						<tabledata>
							<paragraph>
							  En plaçant votre fichier source dans un répertoire "quelconque" 
							  MAIS en vérifiant que l'endroit où devront se trouver les classes est une arborescence
								qui correspond au nom du package.
							</paragraph>
						</tabledata>
						<tabledata>
							<paragraph>
								Supposons que :
							</paragraph>
							<list listStyle="unordered"> 
								<item>
								  le fichier <formatted style="code">Test.java</formatted> se trouve dans 
								  <formatted style="code">/home/g32010/td6/sources/Test.java</formatted>,
                </item>
                <item>le package est <formatted style="code">g32010.td6.classes</formatted>,</item>
								<item>Le CLASSPATH contient <formatted style="code">/home</formatted>,</item>
								<item>la classe s'appelle <formatted style="code">Test</formatted>,</item>
								<item>le chemin absolu du fichier <formatted style="italic">class</formatted> est <formatted style="code">/home/g32010/td6/classes/Test.class</formatted>.</item>
							</list>
							<paragraph>
								Dans le répertoire <formatted style="code">/home/g32010/td6/sources</formatted> : 
								<formatted style="code">vi Test.java</formatted>. <newLine/>
								La première instruction est <formatted style="code">package g32010.td6.classes;</formatted>
							</paragraph>
							<paragraph>
								Vous obtenez un fichier <formatted style="code">Test.java</formatted>
								dont le chemin est <formatted style="code">/home/g32010/td6/sources/Test.java</formatted>.
							</paragraph>
						</tabledata>
					</tablerow>
					<tablerow>
						<tabledata>
							2
						</tabledata>
						<tabledata>
							<paragraph>
								En le compilant, dans le répertoire où se trouve le <formatted style="italic">.java</formatted>, avec la commande <formatted style="code">javac</formatted> suivie de l'option<formatted style="code">-d</formatted>
								suivie du morceau de chemin se trouvant dans le <formatted style="code">CLASSPATH</formatted>
							</paragraph>
						</tabledata>
						<tabledata>
							<paragraph>
							  Dans le répertoire <formatted style="code">/home/g32010/td6/sources</formatted><newLine/>
								<formatted style="code">javac -d /home Test.java</formatted>
							</paragraph>
							<paragraph>
								Vous obtenez un fichier <formatted style="code">Test.class</formatted> dans votre répertoire 
								<formatted style="code">/home/g32010/td6/classes</formatted>, conformément à ce qui est écrit dans 
								l'instruction <formatted style="code">package</formatted>.							
							</paragraph>
						</tabledata>
					</tablerow>
					<tablerow>
						<tabledata>
							3
						</tabledata>
						<tabledata>
							<paragraph>
								En exécutant la classe en donnant son <formatted style="bold">nom complet</formatted>
								avec la commande <formatted style="code">java</formatted>
							</paragraph>
						</tabledata>
						<tabledata>
							<paragraph>
								<formatted style="code">java g32010.td6.classes.Test</formatted>
							</paragraph>
						</tabledata>
					</tablerow>
				</table>

			</clarify>

			<act>
				
				<paragraph title="Utiliser un package" icon="act"/>
				<list listStyle="ordered">
					<item>
					  Modifiez votre programme <formatted style="code">Hello.java</formatted> de votre répertoire <formatted style="code">td3</formatted> 
					  en y ajoutant l'instruction suivante à la première ligne: <newLine/>
					  <formatted style="java">package gxxxxx.td3;</formatted>
          </item>
					<item>Compilez et exécutez le programme. Qu'est-ce qui change ?</item>
					<item>Exécutez-le maintenant à partir du répertoire <formatted style="code">td6</formatted> créé aujourd'hui.</item>
					<item>Pourquoi est-il important d'assigner un package à nos programmes ?</item>
					<item>Au fait ! Comment faire pour exécuter (sans le copier chez vous) le programme d'un de vos condisciples ?</item>
				</list>
				
				<paragraph title="Comprendre le fonctionnement des packages" icon="act"/>
				<list listStyle="ordered">
					<item>Considérons le fichier <formatted style="code">/eCours/java/td6/Ex1.class</formatted>.
						<list listStyle="unordered">
							<item>Quel doit être le package de ce programme pour être en accord avec son emplacement ?</item>
							<item>Justifiez votre réponse en vous référant au contenu de la variable
								<formatted style="code">CLASSPATH</formatted>.</item>
						</list>
					</item>
					<item>Comment voir le contenu d'une variable d'environnement <formatted style="code">CLASSPATH</formatted> ?</item>
					<item>Il vous arrivera souvent d'oublier de spécifier le nom complet de la classe lors de l'exécution. 
						<list listStyle="unordered">
							<item>Faites le test et notez le message d'erreur renvoyé dans ce cas.</item>
							<item>Comparez-le au cas où vous indiquez un nom de classe inexistant.</item>
						</list>
					</item>
					<item>Au fait ! Pourquoi cela marchait-il lorsqu'on ne spécifiait pas de package ?</item>
				</list>
				
				<list listStyle="unordered" title="Petit challenge">
					<item>
					  Revenons à votre programme <formatted style="code">Hello.java</formatted> de votre répertoire <formatted style="code">td3</formatted> 
					  <newLine/>
					  Vous ne trouvez pas qu'il manque de couleur ?
					  <newLine/>
					  Heureusement, nous y avons pensé aussi et avons mis à votre disposition une classe qui permettra de colorer un peu tout ça :)
					</item>
					<item>Cette classe s'appelle <formatted style="code">Couleur.class</formatted> et se situe dans <formatted style="code">/eCours/java/tds/td6</formatted>.</item>
					<item>Son package est <formatted style="code">java.tds.td6</formatted></item>
					<item>Modifiez votre <formatted style="code">CLASSPATH</formatted> en conséquence afin de pouvoir l'utiliser.</item>
					<item>
					  Faites le <formatted style="code">import</formatted> nécessaire dans votre classe <formatted style="code">Hello.java</formatted> 
					  afin de pouvoir utiliser les méthodes de cette classe <formatted style="code">Couleur</formatted>.
          </item>
          <item>
            Appelez les méthodes de classe de <formatted style="code">Couleur</formatted> afin d'afficher votre texte en couleur.
            La documentation de cette classe se trouve dans le répertoire TD de poEsi.
          </item>
          <item>Appelez votre professeur afin de lui montrer ce que vous avez fait :)</item>
				</list>
				
			</act>

		</learningObject>
		
		<learningObject title="Boucles">
			<clarify>
				<paragraph>
					Voici quelques exercices donnés au cours de logique, traduisez-les en java. 
					N'oubliez pas d'utiliser un package et des méthodes pour chacun de vos programmes!
				</paragraph>
			</clarify>
			<act>
				<paragraph title="Compter jusque 10" icon="act">
					Syllabus de logique "version avec tant que" et "version avec pour" de l'exemple 1 page 73 du chapitre 7.
				</paragraph>
				<paragraph title="Compter de 1 à N" icon="act">
					Syllabus de logique solution de l'exemple 2 page 73 du chapitre 7.
				</paragraph>
				<paragraph title="Afficher pair" icon="act">
					Syllabus de logique solutions 1 et 2 de l'exemple 3 page 74 du chapitre 7.
				</paragraph>
				<paragraph title="Somme de nombres" icon="act">
					Syllabus de logique variantes 1, 2 et 3 de l'exemple 5 pages 75 et 76 du chapitre 7.
				</paragraph>
			</act>
		</learningObject>
		
		<learningObject title="Trucs et astuces du jour">
			<clarify>
				<paragraph title="tail" icon="icon_reading"/>
				<paragraph>
					En bash, la commande <formatted style="input">tail</formatted>
					affiche la dernière partie (par défaut : 10 lignes) de chacun des fichiers indiqués.
				</paragraph>
				<paragraph>
					Si aucun fichier n'est fourni, ou si le nom '-' est mentionné,
					la lecture se fera depuis l'entrée standard.
				</paragraph>
				<paragraph>
					Si plusieurs fichiers sont fournis, un en-tête est affiché avant chaque
					fichier contenant son nom encadré par `==&gt;' et `&lt;=='.
				</paragraph>
				<paragraph>
					Utilisez le manuel pour découvrir les options de cette commande. 
				</paragraph>

			</clarify>
			<act>
				
				<paragraph title="tail" icon="icon_reading"/>
				<list listStyle="ordered">
					<item>
						Visualisez les 15 dernières lignes fichier
						<formatted style="code">~/.bash_history</formatted> par la commande tail.
					</item>
					<item>Contient-il les dernières commandes ?</item>
					<item>Qui a  le droit de visionner ce fichier ? </item>
				</list>

				<paragraph title="history" icon="act"/>
				<list listStyle="ordered">
					<item>
						Ouvrez deux consoles et exécutez-y des commandes différentes.
						Tapez plusieurs fois à la suite une même commande.
					</item>
					<item>
						Qu'en est-il de l'affichage produit par la commande history dans
						les deux consoles et du fichier <formatted style="code">~/.bash_history</formatted> ?
					</item>
				</list>
			</act>
		</learningObject>

	</unit>
	
	<metadata>
		<organisation level="1ère année" module="Laboratoires Java">
			<creationPosition><posNumber>6</posNumber></creationPosition>
		</organisation>
		<prerequisites><preReqItem label="none"/></prerequisites>
		<keywords><keywordItem>Java</keywordItem><keywordItem>Linux</keywordItem></keywords>
		<technical>
			<technicalRequirement>
				<type>Browser</type>
				<name>any</name>
				<minimumVersion>unknown</minimumVersion>
			</technicalRequirement>
		</technical>
		<lessonInfo>
			<language language="fr" derived="no"/>
			<lifecycle>
				<version>2012 - 2013</version>
				<contribute>
					<person name="ARO" />
					<person name="BEJ" />
					<person name="CLR" />
					<person name="DNA" />
					<person name="HAL" />
					<person name="MBA" />
					<person name="MCD" />
					<person name="NPX" />
					<person name="PBT" />
				</contribute>
			</lifecycle>
			<educational><typicalLearningTime><time/></typicalLearningTime></educational>
		</lessonInfo>
		<rights>
			<cost>no</cost>
			<copyright>Distribué sous licence Creative Commons Paternité - Partage à l'Identique 2.0 Belgique</copyright>
			<copyrightURL>http://creativecommons.org/licenses/by-sa/2.0/be/</copyrightURL>
		</rights>
	</metadata>


</lesson>
