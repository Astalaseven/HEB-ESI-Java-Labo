<?xml version="1.0" encoding="UTF-8"?>
<lesson xmlns="http://www.elml.ch" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://www.elml.ch ../../../_config/validate.xsd" 
	label="TD7" title="TD7 : Les tableaux">
	
	<entry>
		<paragraph>  
			Ce TD a pour objectif de vous familiariser avec les tableaux à une dimension.
		</paragraph>  
	</entry>

	<unit label="TD7" title="TD7 : Les tableaux">
		<learningObject title="Exercices">
			<act>
			  <paragraph title="UtilTabInt" icon="act"/>  
				<paragraph>    
					Écrivez une classe <formatted style="java">UtilTabInt</formatted> 
					qui contiendra des méthodes de classe utiles pour l'utilisation de tableaux d'entiers.
				</paragraph>
				<paragraph>    
					Écrivez aussi une classe <formatted style="java">Principale</formatted> 
					qui ne contiendra qu'une méthode <formatted style="java">main</formatted>
					servant à tester <formatted style="java">UtilTabInt</formatted> .
				</paragraph>
				<paragraph> 
					Séparez clairement vos sources et vos classes comme on vous a déjà proposé de le faire lors du TD précédent 
					et choisissez votre package en conséquence.
				</paragraph>
				<paragraph>    
					<formatted style="bold">Compilez</formatted> après chaque point 
					et <formatted style="bold">exécutez</formatted> votre programme
					après chaque modification de la méthode <formatted style="java">main</formatted>.
				</paragraph>
				<paragraph>    
					Pour la classe <formatted style="java">UtilTabInt</formatted> et pour chaque méthode de cette classe, 
					<formatted style="bold">écrivez la javadoc</formatted> correspondante et générez-la.
				</paragraph>
				<paragraph>    
					Montrez à votre professeur ce que vous avez exécuté au fur et à mesure.    
				</paragraph>
				<list listStyle="ordered">
					<item>
						Écrivez, dans la classe <formatted style="java">UtilTabInt</formatted>, 
						une méthode de classe <formatted style="java">initialiser</formatted>    
						qui reçoit en paramètre un tableau d'entiers. 
						Cette méthode initialisera toutes les valeurs du tableau à la valeur de l'indice dans le tableau.
					</item>    
					<item>
						Dans la méthode <formatted style="java">main</formatted> 
						de la classe <formatted style="java">Principale</formatted>, créez un tableau d'entiers de taille 10
						et appelez la méthode <formatted style="java">initialiser</formatted> ci-dessus pour initialiser votre tableau.
						<newLine/>
						Pensez à <formatted style="bold">compiler</formatted> vos classes et à exécuter votre programme.
						<newLine/>
						Écrivez déjà la <formatted style="bold">javadoc</formatted> pour la 
						méthode <formatted style="java">initialiser</formatted>.
						N'oubliez pas de la générer dans un répertoire nommé <formatted style="italic">javadoc</formatted> 
						et de vérifier le résultat obtenu.
					</item> 
					<item>
						Écrivez, dans la classe <formatted style="java">UtilTabInt</formatted>, 
						une méthode de classe <formatted style="java">afficher</formatted> 
						qui reçoit en paramètre un tableau d'entiers et qui affiche tous les éléments du tableau.
					</item>    
					<item>
						Dans la méthode <formatted style="java">main</formatted> 
						de la classe <formatted style="java">Principale</formatted> définie ci-dessus, 
						appelez la méthode <formatted style="java">afficher</formatted> 
						pour afficher les éléments du tableau que vous avez créé.
						<newLine/>
						Vous avez encore ajouté une méthode et modifié votre méthode <formatted style="java">main</formatted>. 
						N'oubliez pas de <formatted style="bold">recompiler</formatted> vos classes,
						d'<formatted style="bold">exécuter</formatted> votre programme
						et de compléter la <formatted style="bold">javadoc</formatted>.
						À partir de maintenant, je ne vous le rappellerai plus !
					</item> 
					<item>
						Écrivez, dans la classe <formatted style="java">UtilTabInt</formatted>, 
						une méthode de classe <formatted style="java">sommer</formatted> 
						telle que dans le syllabus de logique exercice 1 du chapitre 8.
					</item>    
					<item>
						Dans la méthode <formatted style="java">main</formatted>, 
						appelez la méthode <formatted style="java">sommer</formatted> 
						pour trouver la somme des éléments du tableau que vous avez créé.
					</item>    
					<item>
						Écrivez, dans la classe <formatted style="java">UtilTabInt</formatted>, 
						une méthode de classe <formatted style="java">maximum</formatted> 
						telle que dans le syllabus de logique exercice 2 du chapitre 8. 
					</item>    
					<item>
						Dans la méthode <formatted style="java">main</formatted>, 
						appelez la méthode <formatted style="java">maximum</formatted> 
						pour trouver le maximum des éléments du tableau que vous avez créé.
					</item>    
					<item>
						Écrivez, dans la classe <formatted style="java">UtilTabInt</formatted>, 
						une méthode de classe <formatted style="java">indiceMax</formatted> 
						telle que dans le syllabus de logique exercice 3 du chapitre 8.
					</item>    
					<item>
						Dans la méthode <formatted style="java">main</formatted>, 
						appelez la méthode <formatted style="java">indiceMax</formatted> 
						pour trouver l'indice du maximum des éléments du tableau que vous avez créé. 
					</item>    
					<item>
						Écrivez, dans la classe <formatted style="java">UtilTabInt</formatted>, 
						une méthode de classe <formatted style="java">créer</formatted> 
						qui reçoit en paramètre un entier représentant la taille du tableau 
						et qui retourne le tableau d'entiers créé de la taille donnée et dont les éléments sont initialisés à 0.
						<popup title="une aide">Pensez-vous devoir parcourir tout le tableau pour initialiser ses éléments à 0 ?</popup>
					</item>    
					<item>
						Dans la méthode <formatted style="java">main</formatted>, 
						appelez la méthode <formatted style="java">créer</formatted> 
						pour créer un second tableau d'entiers de taille 10.
					</item>    
					<item>
						Écrivez, dans la classe <formatted style="java">UtilTabInt</formatted>, 
						une méthode de classe <formatted style="java">estTrié</formatted>    
						telle que dans le syllabus de logique exercice 8 du chapitre 8.
					</item>    
					<item>
						Dans la méthode <formatted style="java">main</formatted>, 
						appelez la méthode <formatted style="java">estTrié</formatted> 
						pour afficher si les tableaux que vous avez créés sont triés ou non.
					</item>    
					<item>
						Écrivez, dans la classe <formatted style="java">UtilTabInt</formatted>, 
						une méthode de classe <formatted style="java">créer</formatted> 
						qui reçoit en paramètre deux entiers
						<list style="unordered">
							<item>un entier représentant la taille du tableau</item>
							<item>et un entier représentant la valeur initiale des éléments du tableau</item>
						</list>
						et qui retourne le tableau d'entiers
						<list style="unordered">
							<item>créé de la taille donnée</item>
							<item>et dont les éléments sont initialisés à la valeur du deuxième paramètre reçu.</item>
						</list>
					</item>    
					<item>
						Dans la méthode <formatted style="java">main</formatted>, 
						appelez la méthode <formatted style="java">créer</formatted> 
						pour créer un troisième tableau d'entiers de taille 10 initialisé à la valeur 3.
					</item>    
					<item>
						Écrivez, dans la classe <formatted style="java">UtilTabInt</formatted>, 
						une méthode de classe <formatted style="java">inverser</formatted> 
						telle que dans le syllabus de logique exercice 10 du chapitre 8.
					</item>    
					<item>
						Dans la méthode <formatted style="java">main</formatted>, 
						appelez la méthode <formatted style="java">inverser</formatted> 
						pour créer un tableau d'entiers qui est l'inverse du premier que vous avez créé. Affichez-le.
					</item>    
					<item>
						Écrivez, dans la classe <formatted style="java">UtilTabInt</formatted>, 
						une méthode de classe <formatted style="java">positionsMin</formatted> 
						telle que dans le syllabus de logique exercice 9b du chapitre 8.
						<newLine/>
						<formatted style="bold">Attention</formatted>, ici, la méthode n'affichera pas le tableau des positions minimales mais le retournera.
					</item>    
					<item>
						Dans la méthode <formatted style="java">main</formatted>, 
						appelez la méthode <formatted style="java">positionsMin</formatted> 
						pour créer un tableau contenant les indices des positions minimales du tableau fourni. Affichez-le.
					</item>    
		        </list>
		      </act>
      
			<act>
			  <paragraph title="Occurrence des chiffres" icon="act"/>  
				<paragraph>    
					Syllabus de logique exercice 13 du chapitre 8. Ici, la méthode n'affichera pas à l'écran le tableau de résultat mais le retournera.     
				</paragraph>    
				<paragraph>    
					Dans cet exercice, il vous est demandé de fournir en paramètre à la méthode de classe un nombre positif ou nul. 
					Si le nombre fourni est négatif, vous lancerez une <formatted style="java">IllegalArgumentException</formatted>.    
				</paragraph>    
				<paragraph>    
					N'oubliez pas d'écrire la <formatted style="italic">javadoc</formatted> pour cette méthode. Écrivez aussi la méthode <formatted style="java">main</formatted> qui appellera cette méthode.     
				</paragraph>    
      </act>
		</learningObject>


	</unit>
	
	<metadata>
		<organisation level="1ère année" module="Laboratoires Java">
			<creationPosition><posNumber>7</posNumber></creationPosition>
		</organisation>
		<prerequisites><preReqItem label="none"/></prerequisites>
		<keywords><keywordItem>Java</keywordItem><keywordItem>Linux</keywordItem></keywords>
		<technical>
			<technicalRequirement>
				<type>Browser</type>
				<name>any</name>
				<minimumVersion>unknown</minimumVersion>
			</technicalRequirement>
		</technical>
		<lessonInfo>
			<language language="fr" derived="no"/>
			<lifecycle>
				<version>2012 - 2013</version>
				<contribute>
<person name="BEJ" />  <person name="CLG" />  <person name="CLR" />  <person name="DNA" />  <person name="MCD" />  <person name="NPX" />  <person name="PBT" /> 
				</contribute>
			</lifecycle>
			<educational><typicalLearningTime><time/></typicalLearningTime></educational>
		</lessonInfo>
		<rights>
			<cost>no</cost>
			<copyright>Distribué sous licence Creative Commons Paternité - Partage à l'Identique 2.0 Belgique</copyright>
			<copyrightURL>http://creativecommons.org/licenses/by-sa/2.0/be/</copyrightURL>
		</rights>
	</metadata>


</lesson>
